library(psych)
pairs.panels(women)
#Função para cálculo de correlação
cor(women, method = "pearson")
# Criar um modelo para height (variável dependente), utilizando weight
# Variável dependente = height
modelo = lm(height ~ weight, data = women)
View(modelo)
# Considerando um modelo de regressão linear (y = a + bx)
modelo$coefficients
summary(modelo)
library(corrplot)
library(plyr)
library(data.table)
library(dplyr)
library(corrplot)
library(plyr)
library(data.table)
library(dplyr)
caminho<-file.choose()
df_total = fread(file = caminho)
summary(df_total)
str(df_total)
View(df_total)
df_total$mes_ano = paste(df_total$mes, df_total$ano, sep  = '_')
converte = function(x){
if(x < 20.1){
return("baixo")
}else if(x > 60){
return("alto")
}else{
return("medio")
}
}
for(i in 1:nrow(df_total)){
df_total$c_alta_categoria[i] = converte(df_total$c_alta[i])
}
for(i in 1:nrow(df_total)){
df_total$c_alta_categoria[i] = converte(df_total$c_alta[i])
}
df_total = df_total[,c(28,1,2,29,3:27)]
converte = function(x){
if(x < 20.1){
return("baixo")
}else if(x > 60){
return("alto")
}else{
return("medio")
}
}
for(i in 1:nrow(df_total)){
df_total$c_alta_categoria[i] = converte(df_total$c_alta[i])
}
summary(df_total)
str(df_total)
library(corrplot)
library(plyr)
library(data.table)
library(dplyr)
caminho<-file.choose()
df_total = fread(file = caminho)
#Resumo do dataset
summary(df_total)
str(df_total)
# Criando uma coluna para mes_ano
df_total$mes_ano = paste(df_total$mes, df_total$ano, sep  = '_')
View(df_total)
df_total
# Criando uma coluna para mes_ano
df_total$mes_ano = paste(df_total$mes, df_total$ano, sep  = '_')
View(df_total)
library(corrplot)
library(plyr)
library(data.table)
library(dplyr)
caminho<-file.choose()
df_total = fread(file = caminho)
#Resumo do dataset
summary(df_total)
str(df_total)
# Criando uma coluna para mes_ano
df_total$mes_ano = paste(df_total$mes, df_total$ano, sep  = '_')
View(df_total)
